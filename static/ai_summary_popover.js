// AI Summary Popover logic for both index and detail pages
(function() {
  // Create a single popover element for all AI summary labels
  let popover = document.createElement('div');
  popover.className = 'ai-summary-popover';
  document.body.appendChild(popover);
  let hideTimeout = null;

  function showPopover(target) {
    const model = target.getAttribute('data-summary-model') || '';
    const date = target.getAttribute('data-summary-date') || '';
    let modelDisplay = model ? `Generated by: <strong>${model.replace(/gemini[-_]?/i, 'Gemini ')}</strong>` : '';
    let dateDisplay = '';
    if (date) {
      // Try to format as YYYY-MM-DD HH:MM
      let d = new Date(date);
      if (!isNaN(d)) {
        let y = d.getFullYear();
        let m = String(d.getMonth()+1).padStart(2, '0');
        let day = String(d.getDate()).padStart(2, '0');
        let h = String(d.getHours()).padStart(2, '0');
        let min = String(d.getMinutes()).padStart(2, '0');
        dateDisplay = `<span class="popover-date">Date: ${y}-${m}-${day} ${h}:${min}</span>`;
      } else {
        dateDisplay = `<span class="popover-date">Date: ${date}</span>`;
      }
    }
    popover.innerHTML = `${modelDisplay}${dateDisplay}`;
    // Position popover
    const rect = target.getBoundingClientRect();
    const scrollY = window.scrollY || window.pageYOffset;
    const scrollX = window.scrollX || window.pageXOffset;
    let top = rect.bottom + scrollY + 8;
    let left = rect.left + scrollX + 8;
    // Ensure popover stays in viewport
    setTimeout(() => {
      popover.classList.add('visible');
    }, 0);
    popover.style.top = `${top}px`;
    popover.style.left = `${left}px`;
    popover.style.minWidth = '250px';
    popover.style.maxWidth = '350px';
    popover.style.pointerEvents = 'auto';
  }

  function hidePopover() {
    popover.classList.remove('visible');
    popover.style.pointerEvents = 'none';
  }

  function attachPopoverHandlers() {
    document.querySelectorAll('.ai-summary-label').forEach(function(label) {
      label.addEventListener('mouseenter', function(e) {
        if (hideTimeout) clearTimeout(hideTimeout);
        showPopover(label);
      });
      label.addEventListener('mouseleave', function(e) {
        hideTimeout = setTimeout(hidePopover, 120);
      });
    });
    // Hide popover if mouse leaves it
    popover.addEventListener('mouseenter', function() {
      if (hideTimeout) clearTimeout(hideTimeout);
    });
    popover.addEventListener('mouseleave', function() {
      hidePopover();
    });
  }

  // Attach on DOMContentLoaded and after any AJAX (if needed)
  document.addEventListener('DOMContentLoaded', attachPopoverHandlers);
  // If using search.js or dynamic content, you may want to re-call attachPopoverHandlers after updates.
})();
